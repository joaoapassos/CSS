@import url('https://fonts.googleapis.com/css2?family=Qwitcher+Grypen:wght@700&family=Tilt+Prism&display=swap');

* {
    margin: 20px;
}

body {
    background-color: rgb(245, 214, 214);
}

.container {
    background-color: blue;
    height: 100vh;
    display: inline-block;
    position: relative;
}

.div1 {
    background-color: yellow;
    display: inline-block;
    position: relative;
    left: 50px;
    /* Quando estiver ativo o position relative, pode dizer usando as propriedade LEFT, RIGHT, TOP e BOTTOM,
    qual posição que ele deve tomar apartir da posição natural que el foi colocado 
    sem afetar os elementos posteriores*/
    z-index: 1;
    /* Serve para falar em que posição Z cada um esta, se é acima, embaixo, 
    ela só pode ser usada se a propriedade position estiver ativa 
    Seu minimo é -infinito e maximo +infinito*/
}

.div2 {
    background-color: red;
    display: inline-block;
    position: absolute;
    /* Absolute diz respeito a qual vai ser a posição do elemento em relação ao PAI dele
    Só que para ela respeitar essa propriedade o PAI dela deve ser qualquer position menos Static, 
    caso seja static ele vai receber a posição do elemento maior do que o PAI */
    bottom: 10px;
    left: -100px;
}

.fixo {
    position: fixed;
    /* Fixid serve para deixar um elemento fixo na tela no local que vc determinar */
    z-index: 100;
    bottom: 10px;
    left: 0px;
    background-color: green;
    display: flex;
    height: 50px;
    width: 50px;
    align-items: center;
    justify-content: center;
    border-radius: 100%;
    color: white;
}

.div3 {
    background-color: rgb(255, 255, 255);
    display: inline-block;
    position: sticky;
    /* Sticky ou pegajoso, Ele passa o parametro onde quando a passa a rolagem sobre o elemento ele gruda e se mantem onde ele precisa ficar
    E ela só recebe essa propriedade dentro do PAI dela */
    top: 10px;
}


.text {
    color: rgb(53, 53, 100);
    text-align: justify;
    direction: ltr;
    unicode-bidi: bidi-override;
    text-decoration: none;
    text-decoration-color: red;
}

.titulo {
    background-color: rgb(236, 194, 194);
    color: rgb(59, 30, 87);
    border: 20px solid rgb(236, 194, 194);
    border-radius: 10px;
    text-transform: uppercase;
    font-weight: 1000;
    font-family: "Tilt Prism";
    font-size: auto;
}

.t1 {
    text-decoration-line: underline;
    text-decoration-style: wavy;
    font-size: 30px;
    font-family: "Qwitcher Grypen";
}

.t2 {
    text-transform: uppercase;
    line-height: 1.8;
    font-style: italic;
}

.t3 {
    text-indent: 20px;
    font-family: 'audiowide';
}

.t4 {
    letter-spacing: 5px;
}

.t5 {
    font-family: 'audiowide';
}

.aleatoria{
    height: 2vh;
    background-color: white;
    display: inline-block;
}



.link {
    padding-top: 30px;
    display: flex;
    justify-content: center;
    text-decoration: none;
}

.link p {
    color: rgb(170, 28, 28);
    font-size: 20px;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-weight: 700;
    font-variant-caps: all-petite-caps;
    transition: 0.5s;
}

.link p:hover {
    color: rgb(117, 32, 32);
    text-decoration: underline;
}



.imgback {
    height: 300px;
    background: rgb(148, 148, 148) url(./pexels-vlad-alexandru-popa-1402790.jpg) no-repeat center 75%;
    background-size: cover;
    display: flex;
    justify-content: center;
    align-items: center;
}

.imgback p {
    padding: 10px;
    text-align: center;
    color: rgba(255, 255, 255);
    background-color: rgba(180, 64, 64, 0.678);
    font-weight: 800;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}